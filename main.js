//Задание 1

function getObj (number){
    let obj = {};//Делаем объект, в который будем возвращать необходимые данные
    let names = ['Сотни', 'Десятки', 'Единицы'];// Делаем в объекте массив с тремя элементами
    if (number>=1000||number<0||isNaN(number)){//делаем проверку, предусмотренную заданием
        console.log('Повторите ввод: число превышает 999 или введенное не является числом');
        return obj;
    }
    number = number.toString().split('');//переводим число в строку, из строки в массив
    for (let i = number.length-1; i>=0; i--){//перебираем массив
        obj[names[i]] = number[i];//Добавляем в объект
    }
    return obj;//Возвращаем созданные объект в Object
}

let number = +prompt('Введите число от 0 до 999','999');
let Object = getObj(number);
console.log(Object);

//Задание 2
/*Функция addToBasket создает объект (в качестве ключей объекта - id и amount) и
добавляет этот объект в массив basket. Было бы удобно подсчитать общее количество товаров
в объекте каталога*/

function addToBasket(){
    while (true){
        let id = +prompt('Введите товар из каталога: 1 - bike, 2 - car, 3 - ship, 4 - something. Если Вы больше не хотите совершать покупки, нажмите "Отмена", введите "0" или оставьте поле пустым', '');
        if (id == 0) return basket;
        if (id > 4 || id < 1) alert('Нет такого товара в каталоге!');
        if (isNaN(id)) alert('Вы не выбрали товар! Введите число!')
        if (id > 0 && id < 5) {
            let amount = +prompt('Введите количество', '1');
            let prod = {};
            prod.id = id;
            prod.amount = amount;
            basket.push(prod);
        }
    }
}

let products = {
    1: {
        name: 'bike',
        price: 300
    },
    2: {
        name: 'car',
        price: 500
    },
    3: {
        name: 'ship',
        price: 1000
    },
    4: {
        name: 'something',
        price: 100
    }
}

let basket = [];//Заранее создаем пустой массив для корзины
let sum = 0;//Изначальная стоимость товаров в корзине равна нулю

basket = addToBasket();
for (let i = 0; i<basket.length; i++){
    let a = basket[i].id;
    sum += products[a.toString()].price*basket[i].amount;
}
alert(`Стоимость всех товаров составит ${sum}`);

/*Реализовал через числовые id, с замыслом, что при добавлении товара в корзину,
* в массив с корзиной добавляется объект с ключем, совпадающим с
* его идентификатором в каталоге, затем по этому ключу находим в этот объект в каталоге
* и забираем оттуда свойство цены. Как уже выяснили, можно каталог тоже реализовать
* как массив с объектами - принципиальной разницы не будет.
* Так же возник вопрос - можем ли мы подсчитать точное количество конкретных ключей
* в конкретном объекте?*/


